@page "/change-password"

    <nav class="navbar navbar-light bg-light">
        <h1 class="navbar-brand mb-0 h1">Change Password</h1>
    </nav>
    <div class="form-body">
        <div class="form-container">
            <form class="text-center" Model="@changePasswordModel" @onsubmit="ChangePasswordHandler">
                <div class="form-floating">
                    <input type="password" class="form-control current-password" @bind="changePasswordModel.CurrentPassword" placeholder="Current Password" />
                    <label for="floatingInput">Current Password</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="password" class="form-control new-password" @bind="changePasswordModel.NewPassword" placeholder="New Password" />
                    <label for="floatingPassword">New Password</label>
                </div>
                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success" role="alert">@successMessage</div>
                }
                else if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">@errorMessage</div>
                }
                <button class="w-100 btn btn-lg btn-primary" type="submit">
                    <span class="oi oi-check"></span> Submit
                </button>
            </form>
        </div>
    </div>

    @code {
        [CascadingParameter]
        public GlobalState state { get; set; }
        private ChangePasswordModel changePasswordModel = new();
        private string errorMessage = "";
        private string successMessage = "";
        protected override void OnInitialized()
        {
            errorMessage = "";
            successMessage = "";
        }

        private void ChangePasswordHandler()
        {
            try
            {
                errorMessage = "";
                successMessage = "";
                state.CurrentUser = UsersService.ChangePassword(state.CurrentUser.Id, changePasswordModel.CurrentPassword, changePasswordModel.NewPassword);
                successMessage = "The password has been changed successfully.";
            }
            catch (Exception e)
            {
                errorMessage = e.Message;
                Console.WriteLine(e);
            }
        }

        class ChangePasswordModel
        {
            public string CurrentPassword { get; set; }
            public string NewPassword { get; set; }
        }
    }
